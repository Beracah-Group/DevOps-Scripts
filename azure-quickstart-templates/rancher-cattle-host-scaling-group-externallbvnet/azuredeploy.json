{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSku": {
      "type": "string"
    },
    "vmssName": {
      "type": "string"
    },
    "vNetName": {
      "type": "string"
    },
    "vNetSubnetName": {
      "type": "string"
    },
    "loadBalancerName": {
      "type": "string"
    },
    "bePoolName": {
      "type": "string"
    },
    "instanceCount": {
      "type": "int"
    },
    "diskSize" : {
      "type": "string"
    },
    "dockerVersion": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "rancherUrl": {
      "type": "string"
    },
    "sshPublicKey": {
      "type": "secureString"
    },
    "rancherApiAccessKey": {
      "type": "secureString"
    },
    "rancherApiSecretKey": {
      "type": "secureString"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "rancherEnvVars": "[concat('RANCHER_URL=\"',parameters('rancherUrl'),'\" RANCHER_ACCESS_KEY=\"',parameters('rancherApiAccessKey'),'\" RANCHER_SECRET_KEY=\"',parameters('rancherApiSecretKey'),'\"')]",
    "storageAccountType": "Standard_LRS",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id),'sa')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "nicName": "[concat(parameters('vmssName'), 'nic')]",
    "ipConfigName": "[concat(parameters('vmssName'), 'ipconfig')]",
    "osType": {
      "publisher": "Canonical",
      "offer": "UbuntuServer",
      "sku": "16.04-LTS",		
      "version": "latest"
    },
    "imageReference": "[variables('osType')]",
    "computeApiVersion": "2016-04-30-preview",
    "networkApiVersion": "2016-06-01",
    "insightsApiVersion": "2015-04-01"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "Cattle Storage"
      },
      "properties": {
        "accountType": "[variables('StorageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[variables('location')]",
      "apiVersion": "[variables('computeApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('StorageAccountName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": "false",
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "dataDisks": [{
              "lun": "1",
              "createOption": "empty",
              "diskSizeGB": "[parameters('diskSize')]"
            }],
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": "[variables('imageReference')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "true",
              "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
                    "keyData": "[parameters('sshPublicKey')]"
                }
              ]
              }          
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": "true",
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('vNetName'), '/subnets/', parameters('vNetSubnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', parameters('loadBalancerName'), '/backendAddressPools/', parameters('bePoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "lapextension",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "https://raw.githubusercontent.com/SC-TechDev/DevOps-Scripts/master/azure-quickstart-templates/rancher-cattle-host-scaling-group-externallbvnet/startup.sh",
                      "https://raw.githubusercontent.com/SC-TechDev/DevOps-Scripts/master/azure-quickstart-templates/rancher-cattle-host-scaling-group-externallbvnet/addfileshare.sh",
                      "https://raw.githubusercontent.com/SC-TechDev/DevOps-Scripts/master/azure-quickstart-templates/scripts/rancherautojoin.py"
                    ]
                  },
                  "protectedSettings" : {
                    "commandToExecute": "[concat(variables('rancherEnvVars'),' bash startup.sh -a \"',variables('storageAccountName'),'\" -k \"',listKeys(variables('storageAccountid'),'2015-05-01-preview').key1,'\" -v \"',parameters('dockerVersion'),'\" -u \"',parameters('adminUsername'),'\"')]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}